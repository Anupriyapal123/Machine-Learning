# -*- coding: utf-8 -*-
"""LinearRegression_Self.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bDGfYL7G40_CofkdhjGYMZpZYeUv1Bl0
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

#Read data from dataset

df=pd.read_csv("Simple linear regression.csv")
df.head(20)

#Converting dataset into two variables x ,y for Linear Regression

x=df['SAT'].to_list()
y=df['GPA'].to_list()


#Standardization of dataset by finding mean and standard deviation
sum=0
size=len(x)
print(size)
for i in x:
  sum=sum+i
mean=sum/size
s=0
for j in x:
  s=s+pow((i-mean),2)

std=pow((s/(size-1)),0.5)
print(std)
l=[]
for i in x:
  l.append((i-mean)/std)
print(l)

#We will consider two matrix for calculation of parameter matrix
A=np.array([[0,0],[0,0]])
b=np.array([[0],[0]])
#As we are considering homogeneous equation
for i in range(0,size):
  inde_var=np.array([[l[i]],[1]])
  A=np.add(A,np.dot(inde_var,inde_var.T))

  dep_var=y[i]
  b=np.add(b,dep_var*inde_var)

#Calculating W using psedo inverse
w=np.dot(np.linalg.inv(A),b)
print('The values of unknown parameter obtained our calculation',)
print("coefficient of w :",float(w[0]),'b :',float(w[1]))
testx=np.linspace(0,59,200)
testy=[]
for i in testx:
  testy.append((i*float(w[0]))+float(w[1]))
plt.plot(testx,testy)
plt.show




regx = np.array([l]).T
regy = np.array(y)

reg = LinearRegression().fit(regx, regy)

#The values of parameter w obtained by using Sklearn
print('The values of unknown parameter obtained by Sklearn are :')
print('w1:',float(reg.coef_),'b:',reg.intercept_)